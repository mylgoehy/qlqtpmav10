//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40624.0
// 
namespace UISample.ReadingServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="READING", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class READING : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ID_UnitField;
        
        private string SuggestionField;
        
        private string ETextField;
        
        private string VTextField;
        
        private string AudioField;
        
        private UISample.ReadingServiceReference.UNIT UNITField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Unit {
            get {
                return this.ID_UnitField;
            }
            set {
                if ((this.ID_UnitField.Equals(value) != true)) {
                    this.ID_UnitField = value;
                    this.RaisePropertyChanged("ID_Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suggestion {
            get {
                return this.SuggestionField;
            }
            set {
                if ((object.ReferenceEquals(this.SuggestionField, value) != true)) {
                    this.SuggestionField = value;
                    this.RaisePropertyChanged("Suggestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string EText {
            get {
                return this.ETextField;
            }
            set {
                if ((object.ReferenceEquals(this.ETextField, value) != true)) {
                    this.ETextField = value;
                    this.RaisePropertyChanged("EText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string VText {
            get {
                return this.VTextField;
            }
            set {
                if ((object.ReferenceEquals(this.VTextField, value) != true)) {
                    this.VTextField = value;
                    this.RaisePropertyChanged("VText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Audio {
            get {
                return this.AudioField;
            }
            set {
                if ((object.ReferenceEquals(this.AudioField, value) != true)) {
                    this.AudioField = value;
                    this.RaisePropertyChanged("Audio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public UISample.ReadingServiceReference.UNIT UNIT {
            get {
                return this.UNITField;
            }
            set {
                if ((object.ReferenceEquals(this.UNITField, value) != true)) {
                    this.UNITField = value;
                    this.RaisePropertyChanged("UNIT");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UNIT", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class UNIT : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ID_UnitField;
        
        private string NameField;
        
        private System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.WRITING> WRITINGsField;
        
        private System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.GRAMMAR_PRACTICE> GRAMMAR_PRACTICEsField;
        
        private UISample.ReadingServiceReference.LANGUAGE_FOCUS LANGUAGE_FOCUSField;
        
        private UISample.ReadingServiceReference.LISTENING LISTENINGField;
        
        private System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.LISTENING_PRACTICE> LISTENING_PRACTICEsField;
        
        private System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.MUSIC> MUSICsField;
        
        private System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.PICTURE> PICTUREsField;
        
        private System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.READING_ANSWER> READING_ANSWERsField;
        
        private System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.READING_PRACTICE> READING_PRACTICEsField;
        
        private UISample.ReadingServiceReference.SPEAKING SPEAKINGField;
        
        private System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.USER_MARK> USER_MARKsField;
        
        private System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.VOCABULARY> VOCABULARiesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Unit {
            get {
                return this.ID_UnitField;
            }
            set {
                if ((this.ID_UnitField.Equals(value) != true)) {
                    this.ID_UnitField = value;
                    this.RaisePropertyChanged("ID_Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.WRITING> WRITINGs {
            get {
                return this.WRITINGsField;
            }
            set {
                if ((object.ReferenceEquals(this.WRITINGsField, value) != true)) {
                    this.WRITINGsField = value;
                    this.RaisePropertyChanged("WRITINGs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.GRAMMAR_PRACTICE> GRAMMAR_PRACTICEs {
            get {
                return this.GRAMMAR_PRACTICEsField;
            }
            set {
                if ((object.ReferenceEquals(this.GRAMMAR_PRACTICEsField, value) != true)) {
                    this.GRAMMAR_PRACTICEsField = value;
                    this.RaisePropertyChanged("GRAMMAR_PRACTICEs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public UISample.ReadingServiceReference.LANGUAGE_FOCUS LANGUAGE_FOCUS {
            get {
                return this.LANGUAGE_FOCUSField;
            }
            set {
                if ((object.ReferenceEquals(this.LANGUAGE_FOCUSField, value) != true)) {
                    this.LANGUAGE_FOCUSField = value;
                    this.RaisePropertyChanged("LANGUAGE_FOCUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public UISample.ReadingServiceReference.LISTENING LISTENING {
            get {
                return this.LISTENINGField;
            }
            set {
                if ((object.ReferenceEquals(this.LISTENINGField, value) != true)) {
                    this.LISTENINGField = value;
                    this.RaisePropertyChanged("LISTENING");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.LISTENING_PRACTICE> LISTENING_PRACTICEs {
            get {
                return this.LISTENING_PRACTICEsField;
            }
            set {
                if ((object.ReferenceEquals(this.LISTENING_PRACTICEsField, value) != true)) {
                    this.LISTENING_PRACTICEsField = value;
                    this.RaisePropertyChanged("LISTENING_PRACTICEs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.MUSIC> MUSICs {
            get {
                return this.MUSICsField;
            }
            set {
                if ((object.ReferenceEquals(this.MUSICsField, value) != true)) {
                    this.MUSICsField = value;
                    this.RaisePropertyChanged("MUSICs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.PICTURE> PICTUREs {
            get {
                return this.PICTUREsField;
            }
            set {
                if ((object.ReferenceEquals(this.PICTUREsField, value) != true)) {
                    this.PICTUREsField = value;
                    this.RaisePropertyChanged("PICTUREs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.READING_ANSWER> READING_ANSWERs {
            get {
                return this.READING_ANSWERsField;
            }
            set {
                if ((object.ReferenceEquals(this.READING_ANSWERsField, value) != true)) {
                    this.READING_ANSWERsField = value;
                    this.RaisePropertyChanged("READING_ANSWERs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.READING_PRACTICE> READING_PRACTICEs {
            get {
                return this.READING_PRACTICEsField;
            }
            set {
                if ((object.ReferenceEquals(this.READING_PRACTICEsField, value) != true)) {
                    this.READING_PRACTICEsField = value;
                    this.RaisePropertyChanged("READING_PRACTICEs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public UISample.ReadingServiceReference.SPEAKING SPEAKING {
            get {
                return this.SPEAKINGField;
            }
            set {
                if ((object.ReferenceEquals(this.SPEAKINGField, value) != true)) {
                    this.SPEAKINGField = value;
                    this.RaisePropertyChanged("SPEAKING");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.USER_MARK> USER_MARKs {
            get {
                return this.USER_MARKsField;
            }
            set {
                if ((object.ReferenceEquals(this.USER_MARKsField, value) != true)) {
                    this.USER_MARKsField = value;
                    this.RaisePropertyChanged("USER_MARKs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.VOCABULARY> VOCABULARies {
            get {
                return this.VOCABULARiesField;
            }
            set {
                if ((object.ReferenceEquals(this.VOCABULARiesField, value) != true)) {
                    this.VOCABULARiesField = value;
                    this.RaisePropertyChanged("VOCABULARies");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LANGUAGE_FOCUS", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class LANGUAGE_FOCUS : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ID_UnitField;
        
        private string PronunciationField;
        
        private string GrammarField;
        
        private string Grammar_PathField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Unit {
            get {
                return this.ID_UnitField;
            }
            set {
                if ((this.ID_UnitField.Equals(value) != true)) {
                    this.ID_UnitField = value;
                    this.RaisePropertyChanged("ID_Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pronunciation {
            get {
                return this.PronunciationField;
            }
            set {
                if ((object.ReferenceEquals(this.PronunciationField, value) != true)) {
                    this.PronunciationField = value;
                    this.RaisePropertyChanged("Pronunciation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Grammar {
            get {
                return this.GrammarField;
            }
            set {
                if ((object.ReferenceEquals(this.GrammarField, value) != true)) {
                    this.GrammarField = value;
                    this.RaisePropertyChanged("Grammar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Grammar_Path {
            get {
                return this.Grammar_PathField;
            }
            set {
                if ((object.ReferenceEquals(this.Grammar_PathField, value) != true)) {
                    this.Grammar_PathField = value;
                    this.RaisePropertyChanged("Grammar_Path");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LISTENING", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class LISTENING : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ID_UnitField;
        
        private string ContentPractiseField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Unit {
            get {
                return this.ID_UnitField;
            }
            set {
                if ((this.ID_UnitField.Equals(value) != true)) {
                    this.ID_UnitField = value;
                    this.RaisePropertyChanged("ID_Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string ContentPractise {
            get {
                return this.ContentPractiseField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentPractiseField, value) != true)) {
                    this.ContentPractiseField = value;
                    this.RaisePropertyChanged("ContentPractise");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SPEAKING", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class SPEAKING : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ID_UnitField;
        
        private string SuggestionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Unit {
            get {
                return this.ID_UnitField;
            }
            set {
                if ((this.ID_UnitField.Equals(value) != true)) {
                    this.ID_UnitField = value;
                    this.RaisePropertyChanged("ID_Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suggestion {
            get {
                return this.SuggestionField;
            }
            set {
                if ((object.ReferenceEquals(this.SuggestionField, value) != true)) {
                    this.SuggestionField = value;
                    this.RaisePropertyChanged("Suggestion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WRITING", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class WRITING : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ID_UnitField;
        
        private int ID_TaskField;
        
        private int ID_QuesField;
        
        private string QuesField;
        
        private string AnsField;
        
        private string TemplateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Unit {
            get {
                return this.ID_UnitField;
            }
            set {
                if ((this.ID_UnitField.Equals(value) != true)) {
                    this.ID_UnitField = value;
                    this.RaisePropertyChanged("ID_Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int ID_Task {
            get {
                return this.ID_TaskField;
            }
            set {
                if ((this.ID_TaskField.Equals(value) != true)) {
                    this.ID_TaskField = value;
                    this.RaisePropertyChanged("ID_Task");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int ID_Ques {
            get {
                return this.ID_QuesField;
            }
            set {
                if ((this.ID_QuesField.Equals(value) != true)) {
                    this.ID_QuesField = value;
                    this.RaisePropertyChanged("ID_Ques");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Ques {
            get {
                return this.QuesField;
            }
            set {
                if ((object.ReferenceEquals(this.QuesField, value) != true)) {
                    this.QuesField = value;
                    this.RaisePropertyChanged("Ques");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Ans {
            get {
                return this.AnsField;
            }
            set {
                if ((object.ReferenceEquals(this.AnsField, value) != true)) {
                    this.AnsField = value;
                    this.RaisePropertyChanged("Ans");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Template {
            get {
                return this.TemplateField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateField, value) != true)) {
                    this.TemplateField = value;
                    this.RaisePropertyChanged("Template");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GRAMMAR_PRACTICE", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class GRAMMAR_PRACTICE : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ID_UnitField;
        
        private int TaskField;
        
        private int QuesField;
        
        private string AnsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Unit {
            get {
                return this.ID_UnitField;
            }
            set {
                if ((this.ID_UnitField.Equals(value) != true)) {
                    this.ID_UnitField = value;
                    this.RaisePropertyChanged("ID_Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Task {
            get {
                return this.TaskField;
            }
            set {
                if ((this.TaskField.Equals(value) != true)) {
                    this.TaskField = value;
                    this.RaisePropertyChanged("Task");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int Ques {
            get {
                return this.QuesField;
            }
            set {
                if ((this.QuesField.Equals(value) != true)) {
                    this.QuesField = value;
                    this.RaisePropertyChanged("Ques");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Ans {
            get {
                return this.AnsField;
            }
            set {
                if ((object.ReferenceEquals(this.AnsField, value) != true)) {
                    this.AnsField = value;
                    this.RaisePropertyChanged("Ans");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LISTENING_PRACTICE", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class LISTENING_PRACTICE : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ID_UnitField;
        
        private int TaskField;
        
        private int QuesField;
        
        private string AnsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Unit {
            get {
                return this.ID_UnitField;
            }
            set {
                if ((this.ID_UnitField.Equals(value) != true)) {
                    this.ID_UnitField = value;
                    this.RaisePropertyChanged("ID_Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Task {
            get {
                return this.TaskField;
            }
            set {
                if ((this.TaskField.Equals(value) != true)) {
                    this.TaskField = value;
                    this.RaisePropertyChanged("Task");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int Ques {
            get {
                return this.QuesField;
            }
            set {
                if ((this.QuesField.Equals(value) != true)) {
                    this.QuesField = value;
                    this.RaisePropertyChanged("Ques");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Ans {
            get {
                return this.AnsField;
            }
            set {
                if ((object.ReferenceEquals(this.AnsField, value) != true)) {
                    this.AnsField = value;
                    this.RaisePropertyChanged("Ans");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MUSIC", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class MUSIC : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ID_MusicField;
        
        private System.Nullable<int> ID_UnitField;
        
        private string LyricField;
        
        private string PracticeField;
        
        private string Music_PathField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Music {
            get {
                return this.ID_MusicField;
            }
            set {
                if ((this.ID_MusicField.Equals(value) != true)) {
                    this.ID_MusicField = value;
                    this.RaisePropertyChanged("ID_Music");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ID_Unit {
            get {
                return this.ID_UnitField;
            }
            set {
                if ((this.ID_UnitField.Equals(value) != true)) {
                    this.ID_UnitField = value;
                    this.RaisePropertyChanged("ID_Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lyric {
            get {
                return this.LyricField;
            }
            set {
                if ((object.ReferenceEquals(this.LyricField, value) != true)) {
                    this.LyricField = value;
                    this.RaisePropertyChanged("Lyric");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Practice {
            get {
                return this.PracticeField;
            }
            set {
                if ((object.ReferenceEquals(this.PracticeField, value) != true)) {
                    this.PracticeField = value;
                    this.RaisePropertyChanged("Practice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Music_Path {
            get {
                return this.Music_PathField;
            }
            set {
                if ((object.ReferenceEquals(this.Music_PathField, value) != true)) {
                    this.Music_PathField = value;
                    this.RaisePropertyChanged("Music_Path");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PICTURE", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class PICTURE : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ID_PicField;
        
        private System.Nullable<int> ID_UnitField;
        
        private System.Nullable<int> ID_SkillField;
        
        private string Pic_PathField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Pic {
            get {
                return this.ID_PicField;
            }
            set {
                if ((this.ID_PicField.Equals(value) != true)) {
                    this.ID_PicField = value;
                    this.RaisePropertyChanged("ID_Pic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ID_Unit {
            get {
                return this.ID_UnitField;
            }
            set {
                if ((this.ID_UnitField.Equals(value) != true)) {
                    this.ID_UnitField = value;
                    this.RaisePropertyChanged("ID_Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Nullable<int> ID_Skill {
            get {
                return this.ID_SkillField;
            }
            set {
                if ((this.ID_SkillField.Equals(value) != true)) {
                    this.ID_SkillField = value;
                    this.RaisePropertyChanged("ID_Skill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Pic_Path {
            get {
                return this.Pic_PathField;
            }
            set {
                if ((object.ReferenceEquals(this.Pic_PathField, value) != true)) {
                    this.Pic_PathField = value;
                    this.RaisePropertyChanged("Pic_Path");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="READING_ANSWER", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class READING_ANSWER : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ID_UnitField;
        
        private int TaskField;
        
        private int QuesField;
        
        private string AnsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Unit {
            get {
                return this.ID_UnitField;
            }
            set {
                if ((this.ID_UnitField.Equals(value) != true)) {
                    this.ID_UnitField = value;
                    this.RaisePropertyChanged("ID_Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Task {
            get {
                return this.TaskField;
            }
            set {
                if ((this.TaskField.Equals(value) != true)) {
                    this.TaskField = value;
                    this.RaisePropertyChanged("Task");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int Ques {
            get {
                return this.QuesField;
            }
            set {
                if ((this.QuesField.Equals(value) != true)) {
                    this.QuesField = value;
                    this.RaisePropertyChanged("Ques");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Ans {
            get {
                return this.AnsField;
            }
            set {
                if ((object.ReferenceEquals(this.AnsField, value) != true)) {
                    this.AnsField = value;
                    this.RaisePropertyChanged("Ans");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="READING_PRACTICE", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class READING_PRACTICE : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ID_UnitField;
        
        private int TaskField;
        
        private System.Nullable<int> TypeField;
        
        private string ContentsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Unit {
            get {
                return this.ID_UnitField;
            }
            set {
                if ((this.ID_UnitField.Equals(value) != true)) {
                    this.ID_UnitField = value;
                    this.RaisePropertyChanged("ID_Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Task {
            get {
                return this.TaskField;
            }
            set {
                if ((this.TaskField.Equals(value) != true)) {
                    this.TaskField = value;
                    this.RaisePropertyChanged("Task");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Contents {
            get {
                return this.ContentsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentsField, value) != true)) {
                    this.ContentsField = value;
                    this.RaisePropertyChanged("Contents");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="USER_MARK", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class USER_MARK : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ID_UserField;
        
        private int ID_UnitField;
        
        private int ID_SkillField;
        
        private System.Nullable<double> Mark_UnitField;
        
        private System.Nullable<double> Mark_SkillField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_User {
            get {
                return this.ID_UserField;
            }
            set {
                if ((this.ID_UserField.Equals(value) != true)) {
                    this.ID_UserField = value;
                    this.RaisePropertyChanged("ID_User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int ID_Unit {
            get {
                return this.ID_UnitField;
            }
            set {
                if ((this.ID_UnitField.Equals(value) != true)) {
                    this.ID_UnitField = value;
                    this.RaisePropertyChanged("ID_Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int ID_Skill {
            get {
                return this.ID_SkillField;
            }
            set {
                if ((this.ID_SkillField.Equals(value) != true)) {
                    this.ID_SkillField = value;
                    this.RaisePropertyChanged("ID_Skill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<double> Mark_Unit {
            get {
                return this.Mark_UnitField;
            }
            set {
                if ((this.Mark_UnitField.Equals(value) != true)) {
                    this.Mark_UnitField = value;
                    this.RaisePropertyChanged("Mark_Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<double> Mark_Skill {
            get {
                return this.Mark_SkillField;
            }
            set {
                if ((this.Mark_SkillField.Equals(value) != true)) {
                    this.Mark_SkillField = value;
                    this.RaisePropertyChanged("Mark_Skill");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VOCABULARY", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class VOCABULARY : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ID_VocField;
        
        private System.Nullable<int> ID_UnitField;
        
        private System.Nullable<int> ID_SkillField;
        
        private string TypeField;
        
        private string EwordField;
        
        private string VwordField;
        
        private string Voice_PathField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Voc {
            get {
                return this.ID_VocField;
            }
            set {
                if ((this.ID_VocField.Equals(value) != true)) {
                    this.ID_VocField = value;
                    this.RaisePropertyChanged("ID_Voc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<int> ID_Unit {
            get {
                return this.ID_UnitField;
            }
            set {
                if ((this.ID_UnitField.Equals(value) != true)) {
                    this.ID_UnitField = value;
                    this.RaisePropertyChanged("ID_Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Nullable<int> ID_Skill {
            get {
                return this.ID_SkillField;
            }
            set {
                if ((this.ID_SkillField.Equals(value) != true)) {
                    this.ID_SkillField = value;
                    this.RaisePropertyChanged("ID_Skill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Eword {
            get {
                return this.EwordField;
            }
            set {
                if ((object.ReferenceEquals(this.EwordField, value) != true)) {
                    this.EwordField = value;
                    this.RaisePropertyChanged("Eword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Vword {
            get {
                return this.VwordField;
            }
            set {
                if ((object.ReferenceEquals(this.VwordField, value) != true)) {
                    this.VwordField = value;
                    this.RaisePropertyChanged("Vword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string Voice_Path {
            get {
                return this.Voice_PathField;
            }
            set {
                if ((object.ReferenceEquals(this.Voice_PathField, value) != true)) {
                    this.Voice_PathField = value;
                    this.RaisePropertyChanged("Voice_Path");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReadingServiceReference.IReading_Service")]
    public interface IReading_Service {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IReading_Service/LayReading", ReplyAction="http://tempuri.org/IReading_Service/LayReadingResponse")]
        System.IAsyncResult BeginLayReading(int ID_Unit, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.READING> EndLayReading(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IReading_Service/LayReading_Practice", ReplyAction="http://tempuri.org/IReading_Service/LayReading_PracticeResponse")]
        System.IAsyncResult BeginLayReading_Practice(int ID_Unit, int Task, int Type, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.READING_PRACTICE> EndLayReading_Practice(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IReading_Service/GetReading_PracticeContents", ReplyAction="http://tempuri.org/IReading_Service/GetReading_PracticeContentsResponse")]
        System.IAsyncResult BeginGetReading_PracticeContents(int ID_Unit, int Type, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<byte[]> EndGetReading_PracticeContents(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IReading_Service/GetReading_Audio", ReplyAction="http://tempuri.org/IReading_Service/GetReading_AudioResponse")]
        System.IAsyncResult BeginGetReading_Audio(int ID_Unit, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndGetReading_Audio(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IReading_ServiceChannel : UISample.ReadingServiceReference.IReading_Service, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class LayReadingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LayReadingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.READING> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.READING>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class LayReading_PracticeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LayReading_PracticeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.READING_PRACTICE> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.READING_PRACTICE>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetReading_PracticeContentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReading_PracticeContentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<byte[]> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<byte[]>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetReading_AudioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReading_AudioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class Reading_ServiceClient : System.ServiceModel.ClientBase<UISample.ReadingServiceReference.IReading_Service>, UISample.ReadingServiceReference.IReading_Service {
        
        private BeginOperationDelegate onBeginLayReadingDelegate;
        
        private EndOperationDelegate onEndLayReadingDelegate;
        
        private System.Threading.SendOrPostCallback onLayReadingCompletedDelegate;
        
        private BeginOperationDelegate onBeginLayReading_PracticeDelegate;
        
        private EndOperationDelegate onEndLayReading_PracticeDelegate;
        
        private System.Threading.SendOrPostCallback onLayReading_PracticeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetReading_PracticeContentsDelegate;
        
        private EndOperationDelegate onEndGetReading_PracticeContentsDelegate;
        
        private System.Threading.SendOrPostCallback onGetReading_PracticeContentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetReading_AudioDelegate;
        
        private EndOperationDelegate onEndGetReading_AudioDelegate;
        
        private System.Threading.SendOrPostCallback onGetReading_AudioCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Reading_ServiceClient() {
        }
        
        public Reading_ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Reading_ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Reading_ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Reading_ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<LayReadingCompletedEventArgs> LayReadingCompleted;
        
        public event System.EventHandler<LayReading_PracticeCompletedEventArgs> LayReading_PracticeCompleted;
        
        public event System.EventHandler<GetReading_PracticeContentsCompletedEventArgs> GetReading_PracticeContentsCompleted;
        
        public event System.EventHandler<GetReading_AudioCompletedEventArgs> GetReading_AudioCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult UISample.ReadingServiceReference.IReading_Service.BeginLayReading(int ID_Unit, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLayReading(ID_Unit, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.READING> UISample.ReadingServiceReference.IReading_Service.EndLayReading(System.IAsyncResult result) {
            return base.Channel.EndLayReading(result);
        }
        
        private System.IAsyncResult OnBeginLayReading(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ID_Unit = ((int)(inValues[0]));
            return ((UISample.ReadingServiceReference.IReading_Service)(this)).BeginLayReading(ID_Unit, callback, asyncState);
        }
        
        private object[] OnEndLayReading(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.READING> retVal = ((UISample.ReadingServiceReference.IReading_Service)(this)).EndLayReading(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLayReadingCompleted(object state) {
            if ((this.LayReadingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LayReadingCompleted(this, new LayReadingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LayReadingAsync(int ID_Unit) {
            this.LayReadingAsync(ID_Unit, null);
        }
        
        public void LayReadingAsync(int ID_Unit, object userState) {
            if ((this.onBeginLayReadingDelegate == null)) {
                this.onBeginLayReadingDelegate = new BeginOperationDelegate(this.OnBeginLayReading);
            }
            if ((this.onEndLayReadingDelegate == null)) {
                this.onEndLayReadingDelegate = new EndOperationDelegate(this.OnEndLayReading);
            }
            if ((this.onLayReadingCompletedDelegate == null)) {
                this.onLayReadingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLayReadingCompleted);
            }
            base.InvokeAsync(this.onBeginLayReadingDelegate, new object[] {
                        ID_Unit}, this.onEndLayReadingDelegate, this.onLayReadingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult UISample.ReadingServiceReference.IReading_Service.BeginLayReading_Practice(int ID_Unit, int Task, int Type, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLayReading_Practice(ID_Unit, Task, Type, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.READING_PRACTICE> UISample.ReadingServiceReference.IReading_Service.EndLayReading_Practice(System.IAsyncResult result) {
            return base.Channel.EndLayReading_Practice(result);
        }
        
        private System.IAsyncResult OnBeginLayReading_Practice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ID_Unit = ((int)(inValues[0]));
            int Task = ((int)(inValues[1]));
            int Type = ((int)(inValues[2]));
            return ((UISample.ReadingServiceReference.IReading_Service)(this)).BeginLayReading_Practice(ID_Unit, Task, Type, callback, asyncState);
        }
        
        private object[] OnEndLayReading_Practice(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.READING_PRACTICE> retVal = ((UISample.ReadingServiceReference.IReading_Service)(this)).EndLayReading_Practice(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLayReading_PracticeCompleted(object state) {
            if ((this.LayReading_PracticeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LayReading_PracticeCompleted(this, new LayReading_PracticeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LayReading_PracticeAsync(int ID_Unit, int Task, int Type) {
            this.LayReading_PracticeAsync(ID_Unit, Task, Type, null);
        }
        
        public void LayReading_PracticeAsync(int ID_Unit, int Task, int Type, object userState) {
            if ((this.onBeginLayReading_PracticeDelegate == null)) {
                this.onBeginLayReading_PracticeDelegate = new BeginOperationDelegate(this.OnBeginLayReading_Practice);
            }
            if ((this.onEndLayReading_PracticeDelegate == null)) {
                this.onEndLayReading_PracticeDelegate = new EndOperationDelegate(this.OnEndLayReading_Practice);
            }
            if ((this.onLayReading_PracticeCompletedDelegate == null)) {
                this.onLayReading_PracticeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLayReading_PracticeCompleted);
            }
            base.InvokeAsync(this.onBeginLayReading_PracticeDelegate, new object[] {
                        ID_Unit,
                        Task,
                        Type}, this.onEndLayReading_PracticeDelegate, this.onLayReading_PracticeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult UISample.ReadingServiceReference.IReading_Service.BeginGetReading_PracticeContents(int ID_Unit, int Type, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReading_PracticeContents(ID_Unit, Type, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<byte[]> UISample.ReadingServiceReference.IReading_Service.EndGetReading_PracticeContents(System.IAsyncResult result) {
            return base.Channel.EndGetReading_PracticeContents(result);
        }
        
        private System.IAsyncResult OnBeginGetReading_PracticeContents(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ID_Unit = ((int)(inValues[0]));
            int Type = ((int)(inValues[1]));
            return ((UISample.ReadingServiceReference.IReading_Service)(this)).BeginGetReading_PracticeContents(ID_Unit, Type, callback, asyncState);
        }
        
        private object[] OnEndGetReading_PracticeContents(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<byte[]> retVal = ((UISample.ReadingServiceReference.IReading_Service)(this)).EndGetReading_PracticeContents(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetReading_PracticeContentsCompleted(object state) {
            if ((this.GetReading_PracticeContentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReading_PracticeContentsCompleted(this, new GetReading_PracticeContentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReading_PracticeContentsAsync(int ID_Unit, int Type) {
            this.GetReading_PracticeContentsAsync(ID_Unit, Type, null);
        }
        
        public void GetReading_PracticeContentsAsync(int ID_Unit, int Type, object userState) {
            if ((this.onBeginGetReading_PracticeContentsDelegate == null)) {
                this.onBeginGetReading_PracticeContentsDelegate = new BeginOperationDelegate(this.OnBeginGetReading_PracticeContents);
            }
            if ((this.onEndGetReading_PracticeContentsDelegate == null)) {
                this.onEndGetReading_PracticeContentsDelegate = new EndOperationDelegate(this.OnEndGetReading_PracticeContents);
            }
            if ((this.onGetReading_PracticeContentsCompletedDelegate == null)) {
                this.onGetReading_PracticeContentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReading_PracticeContentsCompleted);
            }
            base.InvokeAsync(this.onBeginGetReading_PracticeContentsDelegate, new object[] {
                        ID_Unit,
                        Type}, this.onEndGetReading_PracticeContentsDelegate, this.onGetReading_PracticeContentsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult UISample.ReadingServiceReference.IReading_Service.BeginGetReading_Audio(int ID_Unit, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReading_Audio(ID_Unit, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> UISample.ReadingServiceReference.IReading_Service.EndGetReading_Audio(System.IAsyncResult result) {
            return base.Channel.EndGetReading_Audio(result);
        }
        
        private System.IAsyncResult OnBeginGetReading_Audio(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ID_Unit = ((int)(inValues[0]));
            return ((UISample.ReadingServiceReference.IReading_Service)(this)).BeginGetReading_Audio(ID_Unit, callback, asyncState);
        }
        
        private object[] OnEndGetReading_Audio(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((UISample.ReadingServiceReference.IReading_Service)(this)).EndGetReading_Audio(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetReading_AudioCompleted(object state) {
            if ((this.GetReading_AudioCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReading_AudioCompleted(this, new GetReading_AudioCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReading_AudioAsync(int ID_Unit) {
            this.GetReading_AudioAsync(ID_Unit, null);
        }
        
        public void GetReading_AudioAsync(int ID_Unit, object userState) {
            if ((this.onBeginGetReading_AudioDelegate == null)) {
                this.onBeginGetReading_AudioDelegate = new BeginOperationDelegate(this.OnBeginGetReading_Audio);
            }
            if ((this.onEndGetReading_AudioDelegate == null)) {
                this.onEndGetReading_AudioDelegate = new EndOperationDelegate(this.OnEndGetReading_Audio);
            }
            if ((this.onGetReading_AudioCompletedDelegate == null)) {
                this.onGetReading_AudioCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReading_AudioCompleted);
            }
            base.InvokeAsync(this.onBeginGetReading_AudioDelegate, new object[] {
                        ID_Unit}, this.onEndGetReading_AudioDelegate, this.onGetReading_AudioCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override UISample.ReadingServiceReference.IReading_Service CreateChannel() {
            return new Reading_ServiceClientChannel(this);
        }
        
        private class Reading_ServiceClientChannel : ChannelBase<UISample.ReadingServiceReference.IReading_Service>, UISample.ReadingServiceReference.IReading_Service {
            
            public Reading_ServiceClientChannel(System.ServiceModel.ClientBase<UISample.ReadingServiceReference.IReading_Service> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginLayReading(int ID_Unit, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID_Unit;
                System.IAsyncResult _result = base.BeginInvoke("LayReading", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.READING> EndLayReading(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.READING> _result = ((System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.READING>)(base.EndInvoke("LayReading", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLayReading_Practice(int ID_Unit, int Task, int Type, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = ID_Unit;
                _args[1] = Task;
                _args[2] = Type;
                System.IAsyncResult _result = base.BeginInvoke("LayReading_Practice", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.READING_PRACTICE> EndLayReading_Practice(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.READING_PRACTICE> _result = ((System.Collections.ObjectModel.ObservableCollection<UISample.ReadingServiceReference.READING_PRACTICE>)(base.EndInvoke("LayReading_Practice", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetReading_PracticeContents(int ID_Unit, int Type, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = ID_Unit;
                _args[1] = Type;
                System.IAsyncResult _result = base.BeginInvoke("GetReading_PracticeContents", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<byte[]> EndGetReading_PracticeContents(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<byte[]> _result = ((System.Collections.ObjectModel.ObservableCollection<byte[]>)(base.EndInvoke("GetReading_PracticeContents", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetReading_Audio(int ID_Unit, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID_Unit;
                System.IAsyncResult _result = base.BeginInvoke("GetReading_Audio", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndGetReading_Audio(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("GetReading_Audio", _args, result)));
                return _result;
            }
        }
    }
}
